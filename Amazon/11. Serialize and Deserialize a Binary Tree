class Solution
{
    public:
    //Function to serialize a tree and return a list containing nodes of tree.
    vector<int> v;
    vector<int> serialize(Node *root) 
    {
        if(root==NULL){
            v.push_back(-1);
            return v;
        }
        v.push_back(root->data);
        serialize(root->left);
        serialize(root->right);
        return v;
        //Your code here
    }
    
    //Function to deserialize a list and construct the tree.
    // Node *root=new Node(-1);
    // Node *temp=root;
    int idx=0;
    Node * deSerialize(vector<int> &A)
    {
        if(A.size()==idx || A[idx]==-1){
           // temp=NULL;
            idx++;
            return NULL;
        }
        Node* temp=new Node(A[idx]);
        idx++;
        temp->left=deSerialize(A);
        temp->right=deSerialize(A);
        return temp;
       //Your code here
       
    }

};
