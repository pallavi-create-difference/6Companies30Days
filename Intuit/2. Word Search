class Solution {
public:
    bool solve(int i,int j,int m,int n,string word,vector<vector<char>>& board,int id,
     vector<vector<bool>> &dp){
        if(id==word.size())return true;
        if(i<0 ||j<0 || i>=m ||j>=n ||board[i][j]!=word[id])return false;
        
        if(dp[i][j]!=false)return dp[i][j];
        board[i][j]='0';
        bool r=(solve(i+1,j,m,n,word,board,id+1,dp)||solve(i-1,j,m,n,word,board,id+1,dp)
        || solve(i,j-1,m,n,word,board,id+1,dp) || solve(i,j+1,m,n,word,board,id+1,dp));
        board[i][j]=word[id];
            dp[i][j]=r;
            return r;
            
        
    }
    bool isWordExist(vector<vector<char>>& board, string word) {
        // Code here
        if(word.size()==0)return false;
        bool ans=false;
        int m=board.size();
        int n=board[0].size();
        vector<vector<bool>> dp(m+1,vector<bool>(n+1,false));
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(board[i][j]==word[0] && solve(i,j,m,n,word,board,0,dp)){
               return true;
                }
            }
        }
        return ans;
    }
};
