class Solution{
    static int equalPartition(int N, int arr[])
    {
        int sum=0;
        for(int i=0;i<N;i++){
            sum+=arr[i];
        }
    
        if(sum%2!=0){
            return 0;
            
        }
        
        else{
            sum=sum/2;
            return subset(N, arr,sum);
            
        }
    }
    static int subset(int N,int[] arr,int sum){
        boolean[][] t=new boolean[N+1][sum+1];
        for(int i=0;i<N+1;i++){
            for(int j=0;j<sum+1;j++){
                if(i==0){
                    t[i][j]=false;
                }
                if(j==0){
                    t[i][j]=true;
                }
            }
        }
        if(N==0 || sum==0){
            return 0;
        }
        for(int i=1;i<N+1;i++){
            for(int j=1;j<sum+1;j++){
                if(arr[i-1]<=j){
                   
                        t[i][j]= (t[i-1][j-arr[i-1]] || t[i-1][j]);
                }
                else if(arr[i-1]>j){
                    t[i][j]=t[i-1][j];
                }
            }
        }
        if (t[N][sum]){
            return 1;
        }
        else return 0;
    }
}
